<!---
		This is a collection of games definitions for gbrainy. This work is licensed under GPL 2.0 or higher license.
		This is the same license that gbrainy package.

		Authors:
			Jordi Mas <jmas at softcatala dot org>

		TODO:
			* Mouse sensitive areas
-->
<games>
	<game>
		<_name>Clock Rotation</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<variables>
			int num = (1 + random.Next (5)) * 10;
			int rslt = (2 * 360) + (num * 6);
		</variables>
		<_rationale>Every hour rotates 360 degrees.</_rationale>
		<svg file = "clock.svg" x = "0.25" y = "0.25" width = "0.5" height = "0.5"/>
		<question>How many degrees rotates the minute hand of a clock in 2 hours [num] minute?</question>
		<question plural ="[rslt]">How many degrees rotates the minute hand of a clock in 2 hours [num] minutes?</question>
		<answer>[rslt]</answer>
	</game>

	<game>
		<_name>Brothers and sisters</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<svg file = "family.svg" x = "0.15" y = "0.25" width = "0.625" height = "0.5"/>
		<variant>
			<variables>
				int people = 40;
				int brothers = 10 + random.Next (8);
				int sisters = 12 + random.Next (8);
				int both = 5 + random.Next (5);
				int brothers_only = (brothers - both);
				int sisters_only = (sisters - both);
				int rslt = people - brothers_only - sisters_only - both;
			</variables>
			<_question>Out of [people] people, [brothers] have brothers, [sisters] have sisters and [both] have both. How many people have neither brothers nor sisters?</_question>
			<answer>[rslt]</answer>
			<_rationale>[brothers_only] people have brothers only, [sisters_only] sisters only and [both] have sisters and brothers.</_rationale>
		</variant>
	</game>

	<game>
		<_name>Age</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<svg file = "father_son.svg" x = "0.2" y = "0.25" width = "0.6" height = "0.4"/>
		<variant>
			<variables>
				int father = 46;
				int difference = 2 + random.Next (8);
				int son = (father / 2) - difference;
			</variables>
			<question>John is 46 years old. His son is [difference] year younger than half of John's age. How old is John's son?</question>
			<question plural ="[difference]">John is 46 years old. His son is [difference] years younger than half of John's age. How old is John's son?</question>
			<answer>[son]</answer>
		</variant>
		<variant>
			<variables>
				int [] proportions = new int [] {3,4,5};
				int [] years = new int [] {12, 16, 18};
				int idx = random.Next (years.Length);

				int ago = years [idx];
				int proportion = proportions [idx];
			</variables>
			<question>John's age is nowadays 2 times his son's age. [ago] year ago, John was [proportion] times older than his son. How old is John's son nowadays?</question>
			<question plural ="[ago]">John's age is nowadays 2 times his son's age. [ago] years ago, John was [proportion] times older than his son. How old is John's son nowadays?</question>
			<answer>24</answer>
			<rationale>[ago] year ago, John's age minus [ago] was equal to [proportion] times his son's age minus [ago].</rationale>
			<rationale plural ="[ago]">[ago] years ago, John's age minus [ago] was equal to [proportion] times his son's age minus [ago].</rationale>
		</variant>
	</game>

	<game>
		<_name>Password</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<svg file = "password.svg" x = "0.2" y = "0.25" width = "0.6" height = "0.3"/>
		<variant>
			<variables>
				int digits = 4 + random.Next (3);
				int rslt = (int) Math.Pow (10, digits);
			</variables>
			<question>A file is protected by a password formed by a [digits] digit number (ranging from 0 to 9). How many different passwords can you have?</question>
			<question plural="[digits]">A file is protected by a password formed by a [digits] digits number (ranging from 0 to 9). How many different passwords can you have?</question>
			<answer>[rslt]</answer>
			<_rationale>Every digit has 10 possibilities. The total number of possibilities is 10 at the power of [digits].</_rationale>
		</variant>
		<variant>
			<variables>
				int digits = 2 + random.Next (2);
				int rslt = (int) Math.Pow (8, digits);
			</variables>
			<question>A file is protected by a password formed by a [digits] digit octal number (ranging from 0 to 7). How many different passwords can you have?</question>
			<question plural="[digits]">A file is protected by a password formed by a [digits] digits octal number (ranging from 0 to 7). How many different passwords can you have?</question>
			<answer>[rslt]</answer>
			<_rationale>Every digit has 8 possibilities. The total number of possibilities is 8 at the power of [digits].</_rationale>
		</variant>
	</game>

	<game>
		<_name>Tennis game</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<svg file = "tennis.svg" x = "0.25" y = "0.25" width = "0.5" height = "0.5"/>
		<variant>
			<variables>
				int games = 5 + random.Next (5);
				int rslt = (int) Math.Pow (2, games);
			</variables>
			<question>There is [games] tennis game played simultaneously. How many different forecasts are possible?</question>
			<question plural="[games]">There are [games] tennis games played simultaneously. How many different forecasts are possible?</question>
			<answer>[rslt]</answer>
			<_rationale>Every game is an independent event with 2 possible results. The total number of possibilities is 2 at the power of [games].</_rationale>
		</variant>
		<variant>
			<variables>
				int players = 32 + (random.Next (16) * 2);
				int rslt = players -1;
			</variables>
			<question>How many matches does it take to determine the winner of a tennis tournament that starts with [players] player?</question>
			<question plural ="[players]">How many matches does it take to determine the winner of a tennis tournament that starts with [players] players?</question>
			<_rationale>In every match you eliminate one player, you need the total number of games minus 1 to find out the winner.</_rationale>
			<answer>[rslt]</answer>
		</variant>
	</game>

	<game>
		<_name>Bank interest</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<svg file = "money.svg" x = "0.25" y = "0.25" width = "0.5" height = "0.5"/>
		<variant>
			<variables>
				int years = 2;
				double interest = 0.10;
				int [] money_options = new int [] {100, 200, 300, 400, 500, 600};
				int money = money_options [random.Next (money_options.Length)];

				double rslt =  money * (Math.Pow (1 + interest, years));
			</variables>
			<question>You have [money] monetary unit in your bank account at 10% compound interest annually. How much money will you have at end of 2 years?</question>
			<question plural = "[money]">You have [money] monetary units in your bank account at 10% compound interest annually. How much money will you have at end of 2 years?</question>
			<answer>[rslt]</answer>
			<_rationale>Compound interest is paid on the original amount and on the accumulated past interest.</_rationale>
		</variant>
	</game>

	<game>
		<_name>Simple equations</_name>
		<type>Calculation</type>
		<difficulty>All</difficulty>

		<!-- Addition -->
		<variant>
			<variables>
				int num_a = 30 + random.Next (20);
				int num_b = 60 + random.Next (20);
				int rslt = num_b - num_a;
			</variables>
			<_question>What number plus [num_a] equals [num_b]?</_question>
			<string _text = "x + [num_a] = [num_b]" x = "0.5" y = "0.4" centered = "yes" size = "big"/>
			<answer>[rslt]</answer>
			<_rationale>It is the result of the operation [num_b] - [num_a].</_rationale>
		</variant>

		<!-- Subtraction -->
		<variant>
			<variables>
				int num_a = 30 + random.Next (20);
				int num_b = 60 + random.Next (20);
				int rslt = num_b + num_a;
			</variables>
			<_question>What number minus [num_a] equals [num_b]?</_question>
			<string _text = "x - [num_a] = [num_b]" x = "0.5" y = "0.4" centered = "yes" size = "big"/>
			<answer>[rslt]</answer>
			<_rationale>It is the result of the operation [num_a] + [num_b].</_rationale>
		</variant>

		<!-- Multiplication -->
		<variant>
			<variables>
				int num_a = 3 + random.Next (5);
				int num_b = (30 + random.Next (20)) * num_a;
				int rslt = num_b / num_a;
			</variables>
			<_question>What number multiplied by [num_a] equals [num_b]?</_question>
			<string _text = "x * [num_a] = [num_b]" x = "0.5" y = "0.4" centered = "yes" size = "big"/>
			<answer>[rslt]</answer>
			<_rationale>It is the result of the operation [num_b] / [num_a].</_rationale>
		</variant>

		<!-- Division -->
		<variant>
			<variables>
				int num_a = 3 + random.Next (5);
				int num_b = 3 + random.Next (5);
				int rslt = num_a * num_b;
			</variables>
			<_question>What number divided by [num_a] equals [num_b]?</_question>
			<string _text = "x / [num_a] = [num_b]" x = "0.5" y = "0.4" centered = "yes" size = "big"/>
			<answer>[rslt]</answer>
			<_rationale>It is the result of the operation [num_a] * [num_b].</_rationale>
		</variant>
	</game>

	<game>
		<_name>Boxes</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<variant>
			<svg file = "box.svg" x = "0.1" y = "0.1" width = "0.6" height = "0.5"/>
			<string _text = "Container" x = "0.4" y = "0.62" centered = "yes" />
			<svg file = "box.svg" x = "0.75" y = "0.2" width = "0.1" height = "0.1"/>
			<string _text = "Box" x = "0.8" y = "0.32" centered = "yes" />
			<variables>
				double z = 4 + random.Next (5);
				double big_box = 6 * 5 * z;
				double small_box = 1 * 1 * 0.5;
				double rslt = big_box / small_box;
			</variables>
			<_question>How many boxes measuring 1 x 1 x 0.5 can be packed into a container measuring 6 x 5 x [z]?</_question>
			<answer>[rslt]</answer>
			<_rationale>You can fit 6 * 5 * [z] * 2 boxes.</_rationale>
		</variant>
	</game>

	<game>
		<_name>Palindromic years</_name>
		<type>Logic</type>
		<difficulty>All</difficulty>
		<variant>
			<variables>
				int [] years_start = new int [] {1991, 2992, 3993};
				int [] years_end = new int [] {2002, 3003, 4004};
				int idx = random.Next (years_start.Length - 1);
				int year_start = years_start [idx];
				int year_end = years_end [idx];
				int rslt_a = years_start [idx + 1];
				int rslt_b = years_end [idx + 1];
			</variables>
			<_question>[year_start] was a palindromic year as [year_end] was, a gap of 11 years. What are the next two consecutive palindromic years after [year_end] with the same gap?</_question>
			<_tip>A palindromic number is number that remains the same when its digits are reversed (e.g.: 2112).</_tip>
			<answer>[rslt_a] | [rslt_b]</answer>
			<_answer_show>[rslt_a] and [rslt_b]</_answer_show>
			<answer_expression>[0-9]+</answer_expression>
			<answer_checkattributes>Trim | MatchAll </answer_checkattributes>
			<_rationale>Palindrome years occur usually at 110 year intervals except for the end of each millennium that occur at a 11 years interval.</_rationale>
		</variant>

	</game>
</games>
